# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-13 20:58
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import picklefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annotation', models.TextField(blank=True)),
                ('text', models.TextField(blank=True)),
                ('display_text', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Answer',
                'verbose_name_plural': 'Answers',
            },
        ),
        migrations.CreateModel(
            name='EmailNotificationQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender', models.TextField()),
                ('body', models.TextField()),
                ('tries', models.IntegerField(default=1)),
                ('subject', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Email notification queue',
                'verbose_name_plural': 'Email notification queues',
            },
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('context', models.TextField()),
                ('aproved', models.BooleanField(default=False)),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report_builder.Answer')),
            ],
            options={
                'verbose_name': 'Observation',
                'verbose_name_plural': 'Observations',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=500)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_to_load', models.CharField(max_length=30)),
                ('text', models.TextField()),
                ('help', models.TextField(blank=True)),
                ('answer_options', models.TextField()),
                ('required', models.IntegerField(choices=[(0, 'Optional'), (1, 'Required'), (2, 'Required by hierarchy')], default=0)),
                ('order', models.CharField(blank=True, max_length=10)),
                ('auto', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
            },
        ),
        migrations.CreateModel(
            name='QuestionInfoRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catalog_value', models.IntegerField()),
                ('parent_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent', to='report_builder.Question')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report_builder.Question')),
            ],
            options={
                'verbose_name': 'Question information relation',
                'verbose_name_plural': 'Question information relations',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('template', picklefield.fields.PickledObjectField(default=[{'human_name': 'General information', 'name': 'categ0', 'order': 0, 'subcategories': [{'human_name': 'General information', 'name': 'categ0_categ0', 'order': 0, 'question': [], 'questions': []}], 'subcategories_count': 1}], editable=False)),
                ('questions', picklefield.fields.PickledObjectField(default={}, editable=False)),
                ('opening_date', models.DateField()),
            ],
            options={
                'verbose_name': 'Report',
                'verbose_name_plural': 'Reports',
            },
        ),
        migrations.CreateModel(
            name='ReportByProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Opening date')),
                ('submit_date', models.DateField(verbose_name='Submit date')),
                ('state', models.SmallIntegerField(choices=[(0, 'Submit pending'), (1, 'Unsubmitted'), (2, 'Aproved'), (3, 'Editing'), (4, 'Canceled'), (5, 'Rejected'), (6, 'In review')], default=0)),
                ('actions', models.TextField(blank=True, null=True)),
                ('review_percentage', models.SmallIntegerField(default=0)),
                ('complete', models.BooleanField(default=False)),
                ('make_another', models.BooleanField(default=False)),
                ('created_automatically', models.BooleanField(default=False)),
                ('creation_date', models.DateField(auto_now=True)),
                ('additional_info', models.TextField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report_builder.Project')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report_builder.Report')),
            ],
            options={
                'verbose_name': 'Report by project',
                'verbose_name_plural': 'Reports by project',
            },
        ),
        migrations.CreateModel(
            name='ReportType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.TextField()),
                ('app_name', models.SlugField()),
                ('name', models.SlugField()),
                ('subject_action_ok', models.CharField(max_length=200)),
                ('action_ok', models.TextField()),
                ('subject_revision_turn', models.CharField(max_length=200)),
                ('revision_turn', models.TextField()),
                ('responsable_change_notification', models.TextField()),
                ('subject_report_start', models.CharField(max_length=200)),
                ('report_start', models.TextField()),
            ],
            options={
                'verbose_name': 'Report type',
                'verbose_name_plural': 'Report types',
            },
        ),
        migrations.CreateModel(
            name='Reviewer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.SmallIntegerField(choices=[(1, 'First'), (2, 'Second'), (3, 'Third'), (4, 'Fourth'), (5, 'Fifth'), (6, 'Sixth'), (7, 'Seventh')])),
                ('state', models.SmallIntegerField(choices=[(0, 'Unsupported'), (1, 'Supported'), (2, 'In review'), (3, 'Supported by the system'), (4, 'Unsupported by the system')], default=0)),
                ('active', models.BooleanField(default=True)),
                ('make_observations', models.BooleanField(default=False)),
                ('can_ask', models.BooleanField(default=False)),
                ('can_review', models.BooleanField(default=False)),
                ('assigned_automatically', models.BooleanField(default=False)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report_builder.ReportByProject')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reviewer',
                'verbose_name_plural': 'Reviewers',
            },
        ),
        migrations.CreateModel(
            name='ReviewerTree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_criteria', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('report_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report_builder.ReportType')),
            ],
            options={
                'verbose_name': 'Reviewer Tree',
                'verbose_name_plural': 'Reviewer Trees',
            },
        ),
        migrations.CreateModel(
            name='TreeReviewer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.SmallIntegerField(choices=[(1, 'First'), (2, 'Second'), (3, 'Third'), (4, 'Fourth'), (5, 'Fifth'), (6, 'Sixth'), (7, 'Seventh')])),
                ('make_observations', models.BooleanField(default=True)),
                ('can_ask', models.BooleanField(default=True)),
                ('can_review', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tree Reviewer',
                'verbose_name_plural': 'Tree Reviewers',
            },
        ),
        migrations.AddField(
            model_name='reviewertree',
            name='tree_reviewer',
            field=models.ManyToManyField(to='report_builder.TreeReviewer'),
        ),
        migrations.AddField(
            model_name='report',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report_builder.ReportType'),
        ),
        migrations.AddField(
            model_name='questioninforelation',
            name='report',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report_builder.ReportByProject'),
        ),
        migrations.AddField(
            model_name='question',
            name='report',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report_builder.Report'),
        ),
        migrations.AddField(
            model_name='observation',
            name='reviewer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report_builder.Reviewer'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report_builder.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='report',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report_builder.ReportByProject'),
        ),
        migrations.AddField(
            model_name='answer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
